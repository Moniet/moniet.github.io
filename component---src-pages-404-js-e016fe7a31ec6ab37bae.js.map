{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/pages/404.js","webpack:///./src/styles/theme.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Nav.js","webpack:///./src/components/Footer.js","webpack:///./src/components/Layout.js"],"names":["SEO","_ref","description","lang","meta","title","site","_2417117884","data","metaDescription","siteMetadata","Object","core_browser_esm","Helmet_default","a","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","NotFoundPage","Layout","seo","__webpack_require__","d","__webpack_exports__","colors","primary","text","textDark","textLight","headerLight","black","nav","footer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","React","createElement","InternalPageRenderer","assign","json","loader","enqueue","createContext","navbar","css","navList","Nav","role","gatsby_link_default","to","ul","Footer","href","container","styles","children","components_Nav","components_Footer"],"mappings":"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","file":"component---src-pages-404-js-e016fe7a31ec6ab37bae.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\n\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","export const colors = {\n    primary: '#80E7F2',\n    text: '#80E7F2',\n    textDark: '#272727',\n    textLight: '#FFFFFF',\n    headerLight: '#0AEBFF',\n    black: '#272727',\n    nav: '#43518A',\n    footer: '#151515'\n}","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from 'react'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\nimport { colors } from '../styles/theme.js'\n\nconst navbar = css`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    position: relative;\n    top: 0;\n    left: 0;\n    background: ${colors.nav};\n    width: 100%;\n    height: calc(2em + 2vw);\n    padding: 0.25em;\n`\n\nconst navList = css`\n    display: flex;\n    z-index: 1000;\n    a, li {\n        color: ${colors.primary};\n    }\n    a {\n      margin: 0 0.5em;\n      text-decoration: none;\n      font-weight: bold;\n    }\n`\n\nconst Nav = () => {\n    return (\n        <div css={navbar} role=\"navigation\">\n            <div></div>\n            <ul css={navList}>\n                <li><Link to=\"/\">home</Link> /</li>\n                <li><Link to=\"/work\">work</Link> /</li>\n                <li><Link to=\"/art\">art</Link> /</li>\n                <li><Link to=\"/Contact\">contact</Link></li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Nav","import React from 'react'\nimport { css } from '@emotion/core'\nimport { colors } from '../styles/theme.js'\n\nconst footer = css`\n    display: flex;\n    width: 100vw;\n    height: calc(2rem + 5vw);\n    background: ${colors.footer};\n    align-items: center;\n    z-index:1000;\n    align-self: flex-end;\n`\n\nconst ul = css`\n    position: relative;\n    display: flex;\n    justify-content: space-around;\n    width: 100%;\n    li a {\n        color: ${colors.primary};\n        text-decoration: none;\n        letter-spacing: 2px;\n        font-weight: bold;\n    }\n`\n\nconst Footer = () => {\n    return (\n        <footer role=\"footer\" css={footer}>\n            <ul css={ul}>\n                <li><a href=\"https://github.com/moniet\">Github</a></li>\n                <li><a href=\"https://codepen.io/moniet\">Codepen</a></li>\n                <li><a href=\"https://twitter.com/monietz\">Twitter</a></li>\n            </ul>\n        </footer>\n    )\n}\n\nexport default Footer","import React from 'react'\nimport { Global, css } from \"@emotion/core\"\nimport Nav from './Nav'\nimport Footer from './Footer'\n\nconst container = css`\n    display: flex;\n    flex-flow: row wrap;\n    position: relative;\n    width: 100vw;\n    height: 100vh;\n`\n\nconst Layout = ({ children }) => {\n    return (\n        <div css={ container }>\n            <Nav />\n                { children }\n            <Footer />\n        </div>\n    )\n}\n\nexport default Layout\n"],"sourceRoot":""}